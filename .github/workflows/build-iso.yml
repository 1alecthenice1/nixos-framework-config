name: Build NixOS Framework ISO

on:
  push:
    branches: [ main, master ]
    tags: [ 'v*' ]
  pull_request:
    branches: [ main, master ]
  workflow_dispatch:  # Allow manual triggering

jobs:
  build-iso:
    runs-on: ubuntu-latest
    
    steps:
    - name: Checkout repository
      uses: actions/checkout@v4
      
    - name: Install Nix
      uses: cachix/install-nix-action@v25
      with:
        nix_path: nixpkgs=channel:nixos-unstable
        extra_nix_config: |
          experimental-features = nix-command flakes
          access-tokens = github.com=${{ secrets.GITHUB_TOKEN }}
          
    - name: Setup Cachix (optional - speeds up builds)
      uses: cachix/cachix-action@v14
      with:
        name: nixos-framework
        authToken: '${{ secrets.CACHIX_AUTH_TOKEN }}'
        skipPush: true
      continue-on-error: true
        
    - name: Build Framework NixOS ISO
      run: |
        echo "🏗️ Building NixOS ISO for Framework Laptop..."
        nix build .#nixosConfigurations.framework-iso.config.system.build.isoImage -L
        
    - name: Get ISO info
      id: iso-info
      run: |
        ISO_PATH=$(find result/iso -name "*.iso" | head -1)
        ISO_NAME=$(basename "$ISO_PATH")
        ISO_SIZE=$(du -h "$ISO_PATH" | cut -f1)
        echo "iso_path=$ISO_PATH" >> $GITHUB_OUTPUT
        echo "iso_name=$ISO_NAME" >> $GITHUB_OUTPUT
        echo "iso_size=$ISO_SIZE" >> $GITHUB_OUTPUT
        echo "✅ Built ISO: $ISO_NAME ($ISO_SIZE)"
        
    - name: Upload ISO artifact
      uses: actions/upload-artifact@v4
      with:
        name: framework-nixos-iso
        path: ${{ steps.iso-info.outputs.iso_path }}
        compression-level: 0  # ISO is already compressed
        retention-days: 30
        
    - name: Create Release (on tag)
      if: startsWith(github.ref, 'refs/tags/')
      uses: softprops/action-gh-release@v1
      with:
        files: ${{ steps.iso-info.outputs.iso_path }}
        body: |
          ## NixOS Framework ISO Release
          
          🖥️ **Target Hardware:** Framework Laptop 13 AMD 7040
          📦 **ISO Size:** ${{ steps.iso-info.outputs.iso_size }}
          🔐 **Features:** TPM encryption, Secure Boot ready, Framework optimizations
          
          ### Installation Instructions
          1. Flash this ISO to a USB drive
          2. Boot from USB on your Framework laptop
          3. Follow the deployment instructions in the repository
          
          ### What's Included
          - Latest NixOS with Framework hardware support
          - TPM 2.0 and LUKS encryption support
          - Secure Boot compatibility (lanzaboote)
          - Optimized kernel and drivers for Framework hardware
          - Declarative disk partitioning (disko)
          
        generate_release_notes: true
        
    - name: Build summary
      run: |
        echo "## 🎉 Build Complete!" >> $GITHUB_STEP_SUMMARY
        echo "" >> $GITHUB_STEP_SUMMARY
        echo "| Property | Value |" >> $GITHUB_STEP_SUMMARY
        echo "|----------|-------|" >> $GITHUB_STEP_SUMMARY
        echo "| ISO Name | \`${{ steps.iso-info.outputs.iso_name }}\` |" >> $GITHUB_STEP_SUMMARY
        echo "| ISO Size | ${{ steps.iso-info.outputs.iso_size }} |" >> $GITHUB_STEP_SUMMARY
        echo "| Build Time | $(date -u '+%Y-%m-%d %H:%M:%S UTC') |" >> $GITHUB_STEP_SUMMARY
        echo "" >> $GITHUB_STEP_SUMMARY
        echo "### 📥 Download" >> $GITHUB_STEP_SUMMARY
        echo "The ISO is available as a build artifact and can be downloaded from the Actions tab." >> $GITHUB_STEP_SUMMARY
        echo "" >> $GITHUB_STEP_SUMMARY
        echo "### 🚀 Next Steps" >> $GITHUB_STEP_SUMMARY
        echo "1. Download the ISO artifact" >> $GITHUB_STEP_SUMMARY
        echo "2. Flash to USB drive with \`dd\` or Balena Etcher" >> $GITHUB_STEP_SUMMARY
        echo "3. Boot on Framework laptop and follow deployment instructions" >> $GITHUB_STEP_SUMMARY
