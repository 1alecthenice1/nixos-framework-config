name: Build NixOS Framework ISO on AWS

on:
  push:
    branches: [ main, master ]
    tags: [ 'v*' ]
  pull_request:
    branches: [ main, master ]
  workflow_dispatch:  # Allow manual triggering

jobs:
  trigger-aws-build:
    runs-on: ubuntu-latest
    steps:
    - uses: actions/checkout@v4
    
    - name: Configure AWS credentials
      uses: aws-actions/configure-aws-credentials@v4
      with:
        aws-access-key-id: ${{ secrets.AWS_ACCESS_KEY_ID }}
        aws-secret-access-key: ${{ secrets.AWS_SECRET_ACCESS_KEY }}
        aws-region: us-east-1
    
    - name: Start CodeBuild
      id: codebuild
      run: |
        BUILD_ID=$(aws codebuild start-build \
          --project-name nixos-framework-iso-build \
          --source-version ${{ github.sha }} \
          --query 'build.id' \
          --output text)
        echo "build-id=$BUILD_ID" >> $GITHUB_OUTPUT
        echo "Started CodeBuild: $BUILD_ID"
    
    - name: Wait for build completion
      run: |
        BUILD_ID="${{ steps.codebuild.outputs.build-id }}"
        echo "Waiting for build $BUILD_ID to complete..."
        
        while true; do
          STATUS=$(aws codebuild batch-get-builds \
            --ids $BUILD_ID \
            --query 'builds[0].buildStatus' \
            --output text)
          
          echo "Build status: $STATUS"
          
          case $STATUS in
            "SUCCEEDED")
              echo "Build completed successfully!"
              break
              ;;
            "FAILED"|"FAULT"|"STOPPED"|"TIMED_OUT")
              echo "Build failed with status: $STATUS"
              exit 1
              ;;
            "IN_PROGRESS")
              echo "Build in progress, waiting..."
              sleep 30
              ;;
            *)
              echo "Unknown status: $STATUS, waiting..."
              sleep 30
              ;;
          esac
        done
    
    - name: Download artifacts
      run: |
        BUILD_ID="${{ steps.codebuild.outputs.build-id }}"
        
        # Get artifact location
        ARTIFACT_LOCATION=$(aws codebuild batch-get-builds \
          --ids $BUILD_ID \
          --query 'builds[0].artifacts.location' \
          --output text)
        
        echo "Artifact location: $ARTIFACT_LOCATION"
        
        # Extract S3 bucket and key from the location
        BUCKET=$(echo $ARTIFACT_LOCATION | cut -d'/' -f3)
        KEY=$(echo $ARTIFACT_LOCATION | cut -d'/' -f4-)
        
        echo "Downloading from S3: s3://$BUCKET/$KEY"
        aws s3 cp "s3://$BUCKET/$KEY" ./artifacts.zip
        
        # Extract and find ISO
        unzip -q artifacts.zip
        ISO_FILE=$(find . -name "*.iso" | head -1)
        if [ -n "$ISO_FILE" ]; then
          echo "Found ISO: $ISO_FILE"
          ISO_SIZE=$(du -h "$ISO_FILE" | cut -f1)
          echo "ISO size: $ISO_SIZE"
        else
          echo "No ISO file found in artifacts"
          ls -la
        fi
    
    - name: Upload ISO artifact to GitHub
      if: success()
      uses: actions/upload-artifact@v4
      with:
        name: nixos-framework-iso
        path: "*.iso"
        retention-days: 30
        
    - name: Create Release
      if: startsWith(github.ref, 'refs/tags/')
      uses: softprops/action-gh-release@v1
      with:
        files: "*.iso"
        body: |
          # Framework NixOS ${{ github.ref_name }}
          
          **ISO Information:**
          - Built on AWS CodeBuild with high-memory instance
          - Target: Framework Laptop 13 AMD 7040
          
          **Features:**
          - Framework hardware optimizations
          - TPM 2.0 + LUKS encryption support
          - Secure Boot ready (lanzaboote)
          - Minimal installer with console interface
          
          **Installation:**
          1. Flash to USB drive
          2. Boot on Framework laptop
          3. Follow installation guide in repository
